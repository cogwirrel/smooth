#!/bin/bash

if [[ $# -le 1 ]] ; then
  echo "USAGE: `basename "$0"` EXPERIMENT-ID COMMAND..."
  exit 2
fi


# Experiment ID
EXPID="$1"

# Local path to save output files
OUTPUTDIR='output-files/'

# Create directory if non-existant
mkdir -p "$OUTPUTDIR"

# Name of machine acting as DB server
DBSERVER='visual20'

# Path to DB folder on DB server
DBPATH='/homes/wa910/Documents/architecture/smooth/db/'

# Log file in case of error
LOGFILE='experiment.log'

# Get SSH keys
NOPASS='--no-password'
ssh-add -l > /dev/null
case "$?" in
  # Successful
  0) echo "Using detected SSH authentication agent" >&2 ;;
  # No keys added, prompt to add. If that fails, enable password prompt.
  1) ssh-add || { unset NOPASS ; echo "Failed to add keys." >&2 ; } ;;
  # No ssh authentication agent. Re-run script under agent (recursive call)
  2) echo "Starting SSH agent" >&2 ; exec ssh-agent ./"$0" "$@" ;;
esac


# Prepare STDOUT and STDERR files
STDOUT="$OUTPUTDIR"/"${EXPID}-stdout-$$"
STDERR="$OUTPUTDIR"/"${EXPID}-stderr-$$"

# Log files which have not been commited to database
trap "echo `date +%x-%X`: \
            $STDOUT , $STDERR not commited to database > $LOGFILE" EXIT

# Run command and write output to file
shift  # discard experiment ID
bash -c "$@" > >(tee "$STDOUT") 2> >(tee "$STDERR" >&2)


# (Optional) copy output files
scp "$STDOUT" "$STDERR" "${DBSERVER}:${DBPATH}"


./db/remote-exec.py "$NOPASS" --path "$DBPATH" "$DBSERVER" -- \
                    "./add-data.py $EXPID \
                    '`basename $STDOUT`' '`basename $STDERR`'"

